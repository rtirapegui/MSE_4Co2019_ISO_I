/*
 ===============================================================================
 Name        : os_semphr.c
 Author      : $(Rodrigo Tirapegui)
 Version     :
 Copyright   : $(copyright)
 Description :
===============================================================================
*/
#include "os_semphr.h"

/************************
 *	External functions	*
 ***********************/
/* From module: os_task.c */
extern void OS_TASK_PREEMPT_ENABLE(void);
extern void OS_TASK_PREEMPT_DISABLE(void);
extern void * os_task_getCurrentContext(void);
extern void os_task_unblock(void * task);

/****************
 *	Variables	*
 ***************/

/************************
 *	User functions	*
 ***********************/
bool os_semphr_wait(semphr_t * semphr, uint32_t ticksToWait)
{
	bool ret = false;

	if(NULL != semphr)
	{
		OS_TASK_PREEMPT_DISABLE();
		{
			if(0 < semphr->value)
			{
				semphr->value--;
				ret = true;
			}
			else
			{

			}
		}
		OS_TASK_PREEMPT_ENABLE();
	}

	return ret;
}

void os_semphr_post(semphr_t * semphr)
{

}




