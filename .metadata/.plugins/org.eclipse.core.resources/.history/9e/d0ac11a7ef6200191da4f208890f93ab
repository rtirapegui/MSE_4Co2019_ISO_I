/*
===============================================================================
 Name        : os_queue.h
 Author      : $(Rodrigo Tirapegui)
 Version     :
 Copyright   : $(copyright)
 Description :
===============================================================================
*/

#ifndef _OS_QUEUE_H_
#define _OS_QUEUE_H_

/*==================[inclusions]=============================================*/
#include <stdint.h>
#include <stdbool.h>
#include "portmacro.h"

/*==================[typedef]================================================*/

/* Queue type */
typedef struct
{
	volatile uint32_t writeItemOffset;
	volatile uint32_t readItemOffset;
	uint32_t itemSize;
	uint32_t queueSize;
	void * queue;
	void * waitingTask;
} queue_t;

/*==================[macros]=================================================*/
#define OS_QUEUE_INVALID_TASK	0

#define OS_QUEUE_CREATE(name, qLen, iSize)					\
		uint8_t name##_queueBuff[qLen*iSize];				\
		queue_t name##_queue = {							\
									.writeOffset = 0,		\
									.readOffset = 0,		\
									.itemSize = iSize		\
									.qSize =

								};
		semphr_t * name = &name##_semphr;

#define OS_SEMPHR_DECLARE(name)		extern semphr_t * name;

/*==================[external data declaration]==============================*/

/*==================[functions declaration]==================================*/
bool os_queue_send(queue_t * queue, void * sndElement, tick_t ticksToWait);
bool os_queue_receive(queue_t * queue, void * rcvElement, tick_t ticksToWait);

/*==================[end of file]============================================*/

#endif	/*	#ifndef _OS_QUEUE_H_ */
